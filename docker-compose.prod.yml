version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        BUILD_DATE: ${BUILD_DATE:-}
        VCS_REF: ${VCS_REF:-}
        VERSION: ${VERSION:-1.0.0}
    container_name: qr-studio-backend-prod
    restart: unless-stopped
    environment:
      - ENV=production
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=${CORS_ORIGINS:-https://qr-studio.com,https://www.qr-studio.com}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - MIN_QR_SIZE=${MIN_QR_SIZE:-200}
      - MAX_QR_SIZE=${MAX_QR_SIZE:-2048}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
      - QR_GENERATION_LIMIT=${QR_GENERATION_LIMIT:-20}
      - URL_VALIDATION_LIMIT=${URL_VALIDATION_LIMIT:-50}
    volumes:
      - backend_logs:/app/logs
      - backend_tmp:/app/tmp
    depends_on:
      - redis
    networks:
      - qr-studio-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:8000/health', timeout=5)",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        BUILD_DATE: ${BUILD_DATE:-}
        VCS_REF: ${VCS_REF:-}
        VERSION: ${VERSION:-1.0.0}
        VITE_API_URL: ${VITE_API_URL:-https://api.qr-studio.com}
    container_name: qr-studio-frontend-prod
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:8080"
    depends_on:
      - backend
    networks:
      - qr-studio-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 64M

  redis:
    image: redis:7-alpine
    container_name: qr-studio-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - qr-studio-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M

  # Optional: Reverse proxy with SSL termination
  nginx-proxy:
    image: nginx:1.25-alpine
    container_name: qr-studio-proxy-prod
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - qr-studio-network
    profiles:
      - proxy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 64M

volumes:
  redis_data:
    driver: local
  backend_logs:
    driver: local
  backend_tmp:
    driver: local
  nginx_logs:
    driver: local

networks:
  qr-studio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
